name : CICD Pipeline

on:
  push:
    branches:
      - development
      
jobs:
  build:
    runs-on: ubuntu-latest
    # environment: STAGING

    steps: 
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Set up NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '20.14.0'
      
      - name: Install Dependencies
        run: npm install

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.5"

      - name: Initialize Terraform
        run: terraform init
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: AKIA3FLD5TGMVDZBTLQZ
          aws-secret-access-key: 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
          aws-region: us-east-1
          # role-to-assume: arn:aws:iam::767398091161:user/terraform-github
          managed-session-policies: arn:aws:iam::aws:policy/AmazonEC2FullAccess

      - name: Build App
        run: npm run build

      - name: Docker build
        run: docker build -t psoakun/fp-pso .

      - name: Login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish Image to DockerHub
        run: docker push psoakun/fp-pso:latest
  
      - name: Docker run (for development purpose)
        run: docker run -d -p 3000:3000 psoakun/fp-pso

      # - name: Wait for application to start
      #   run: sleep 10  
  
      # - name: Check if app is running (basic health check)
      #   run: curl -f http://localhost:3000 || exit 1

  # test:
  #   runs-on: ubuntu-latest
  #   environment: STAGING
  #   needs: build  

  #   steps:
  #     - name: Checkout Source
  #       uses: actions/checkout@v4

  #     - name: Set up NodeJS
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20.14.0'

  #     - name: Install dependencies
  #       run: npm install

  deploy:
    runs-on: ubuntu-latest
    # environment: STAGING
    needs: build  

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: AKIA3FLD5TGMVDZBTLQZ
          aws-secret-access-key: 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
          aws-region: us-east-1
          # role-to-assume: arn:aws:iam::767398091161:user/terraform-github
          managed-session-policies: arn:aws:iam::aws:policy/AmazonEC2FullAccess
          
      - name: Initialize Terraform
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve

      - name: Terraform Destroy
        run: terraform destroy -target=aws_key_pair.service_key_pair -auto-approve

      - name: Terraform Destroy
        run: terraform destroy -target=local_file.private_key -auto-approve

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan       
      
